<?xml version="1.0" encoding="utf-8"?>
<Programs xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://www.staubli.com/robotics/VAL3/Program/2">
  <Program name="detection">
    <Locals>
      <Local name="l_nCompteur" type="num" xsi:type="array" size="1" />
      <Local name="l_i" type="num" xsi:type="array" size="1" />
      <Local name="l_j" type="num" xsi:type="array" size="1" />
      <Local name="l_ImageNumber0" type="num" xsi:type="array" size="1" />
      <Local name="l_ImageNumber" type="num" xsi:type="array" size="1" />
      <Local name="l_nNumOfPart" type="num" xsi:type="array" size="1" />
      <Local name="l_nRow" type="num" xsi:type="array" size="1" />
      <Local name="l_bResult" type="bool" xsi:type="array" size="1" />
      <Local name="l_bVisOK" type="bool" xsi:type="array" size="1" />
      <Local name="l_sMessage" type="string" xsi:type="array" size="1" />
    </Locals>
    <Code><![CDATA[begin
  // This program reads the ID and the transformation of the parts
  // detected by the camera.
  //
  // Input Param
  //  none       : 
  //
  // Output Param
  //  none       : 
  //
  //----------------------------------------------------------------
  //
  // Log into Cognex camera
  call initvis(l_bVisOK)
  // Reads number of images taken from cell D1
  // 读取拍照的次数，从D1单元
  call cam:readNumValue(hCamTable,"D",1,l_ImageNumber0,l_bResult)
  //
  // detection task running : unlock the task's conveyor when valtrack  begins
  bTaskDetOK=true
  //
  do
    // Loop until a new image has been taken (read cell D1 of the spreadsheet)
    do
      call cam:readNumValue(hCamTable,"D",1,l_ImageNumber,l_bResult)
      delay(0)
    until (l_ImageNumber!=l_ImageNumber0)
    l_ImageNumber0=l_ImageNumber

        // Initialize counter of parts already treated.
    l_nNumOfPart=0
    
    // Reads number of parts found on the images from cell P26
    // 读取这张照片中拍到的正面物件的数量，从P26单元
    call cam:readNumValue(hCamTable,"P",26,l_j,l_bResult)
    // If "number of parts" detected by the camera is bigger than the limit,
    //  set the local variable to the size of the limit.
    l_j=sel(l_j>nMaxNumOfObject,nMaxNumOfObject,l_j)
    //
    // If any parts have been found on the image:
    if l_j>0
      //for i=0 to the number of parts found on the image -1
      for l_i=0 to l_j-1
        //The results of the first part are on row 29
        //第一个物件的坐标在29行
        l_nRow=29+l_i
        //
        // Reads object's ID from cell at column B, row 5
        l_bResult=true
        //读取物件的ID，从B5单元
        call cam:readNumValue(hCamTable,"B",5,nObjectID[l_nNumOfPart],l_bResult)
        //
        if l_bResult==false
          call cam:getErrorMessage(hCamTable,l_sMessage)
          logMsg(sDetNum+"(detection)>>Error0 :"+l_sMessage)
        else
          // Reads the X value of the part and stores it on trObjectPos[l_nNumOfPart].x
          // Reads cell at column P, row l_nRow
          //读取物件的X坐标，从P，l_nRow单元
          call cam:readNumValue(hCamTable,"P",l_nRow,trObjectPos[l_nNumOfPart].x,l_bResult)
          if l_bResult==false
            call cam:getErrorMessage(hCamTable,l_sMessage)
            logMsg(sDetNum+"(detection)>>Error1 :"+l_sMessage)
          else
            // Reads the Y value of the part and stores it on trObjectPos[l_nNumOfPart].y
            // Reads cell at column Q, row l_nRow
            //读取物件的Y坐标，从Q，l_nRow单元
            call cam:readNumValue(hCamTable,"Q",l_nRow,trObjectPos[l_nNumOfPart].y,l_bResult)
            if l_bResult==false
              call cam:getErrorMessage(hCamTable,l_sMessage)
              logMsg(sDetNum+"(detection)>>Error2 :"+l_sMessage)
            else
              // Reads the RZ value of the part and stores it on trObjectPos[l_nNumOfPart].rz
              // Reads cell at column R, row l_nRow
              //读取物件的Rz坐标，从R，l_nRow单元
              call cam:readNumValue(hCamTable,"R",l_nRow,trObjectPos[l_nNumOfPart].rz,l_bResult)
              if l_bResult==false
                call cam:getErrorMessage(hCamTable,l_sMessage)
                logMsg(sDetNum+"(detection)>>Error3 :"+l_sMessage)
              endIf
            endIf
          endIf
        endIf
        //Increases the counter of parts already treated
        l_nNumOfPart=sel(l_bResult==false,l_nNumOfPart,l_nNumOfPart+1)
      endFor
    endIf
    //
    
    
    // Reads number of parts found on the images from cell P189
    // 读取这张照片中拍到的反面物件的数量，从P189单元
    call cam:readNumValue(hCamTable,"P",189,l_j,l_bResult)
    // If "number of parts" detected by the camera is bigger than the limit,
    //  set the local variable to the size of the limit.
    l_j=sel(l_j>nMaxNumOfObject,nMaxNumOfObject,l_j)
    //
    // If any parts have been found on the image:
    if l_j>0
      //for i=0 to the number of parts found on the image -1
      for l_i=0 to l_j-1
        //The results of the first part are on row 192
        //第一个物件的坐标在192行
        l_nRow=192+l_i
        //
        // Reads object's ID from cell at column B, row 168
        l_bResult=true
        //读取物件的ID，从B168单元
        call cam:readNumValue(hCamTable,"B",168,nObjectID[l_nNumOfPart],l_bResult)
        //
        if l_bResult==false
          call cam:getErrorMessage(hCamTable,l_sMessage)
          logMsg(sDetNum+"(detection)>>Error0 :"+l_sMessage)
        else
          // Reads the X value of the part and stores it on trObjectPos[l_nNumOfPart].x
          // Reads cell at column N, row l_nRow
          //读取物件的X坐标，从P，l_nRow单元
          call cam:readNumValue(hCamTable,"P",l_nRow,trObjectPos[l_nNumOfPart].x,l_bResult)
          if l_bResult==false
            call cam:getErrorMessage(hCamTable,l_sMessage)
            logMsg(sDetNum+"(detection)>>Error1 :"+l_sMessage)
          else
            // Reads the Y value of the part and stores it on trObjectPos[l_nNumOfPart].y
            // Reads cell at column Q, row l_nRow
            //读取物件的Y坐标，从Q，l_nRow单元
            call cam:readNumValue(hCamTable,"Q",l_nRow,trObjectPos[l_nNumOfPart].y,l_bResult)
            if l_bResult==false
              call cam:getErrorMessage(hCamTable,l_sMessage)
              logMsg(sDetNum+"(detection)>>Error2 :"+l_sMessage)
            else
              // Reads the RZ value of the part and stores it on trObjectPos[l_nNumOfPart].rz
              // Reads cell at column R, row l_nRow
              //读取物件的Rz坐标，从R，l_nRow单元
              call cam:readNumValue(hCamTable,"R",l_nRow,trObjectPos[l_nNumOfPart].rz,l_bResult)
              if l_bResult==false
                call cam:getErrorMessage(hCamTable,l_sMessage)
                logMsg(sDetNum+"(detection)>>Error3 :"+l_sMessage)
              endIf
            endIf
          endIf
        endIf
        //Increases the counter of parts already treated
        l_nNumOfPart=sel(l_bResult==false,l_nNumOfPart,l_nNumOfPart+1)
      endFor
    endIf
    
    
    // Set number of detected parts.
    // nNumOfPart is watched by the conveyor library
    // Once nNumOfPart is set, the conveyor library will access
    //  the variables nObjectID[] and trObjectPos[].
    //  They must be fully updated before nNumOfPart is set.
    nNumOfPart=l_nNumOfPart
    //
    // Once data have been read by conveyor library
    // nNumOfPart is reset
    wait(nNumOfPart==-1)
    //
    delay(0)
  until false
end]]></Code>
  </Program>
</Programs>